/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1NetworkPolicyPort : NetworkPolicyPort describes a port to allow traffic on



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1NetworkPolicyPort {
    /// If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port. This feature is in Alpha state and should be enabled using the Feature Gate \"NetworkPolicyEndPort\".
    #[serde(rename = "endPort", skip_serializing_if = "Option::is_none")]
    pub end_port: Option<i32>,
    /// The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<serde_json::Value>,
    /// The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<String>,
}

impl V1NetworkPolicyPort {
    /// NetworkPolicyPort describes a port to allow traffic on
    pub fn new() -> V1NetworkPolicyPort {
        V1NetworkPolicyPort {
            end_port: None,
            port: None,
            protocol: None,
        }
    }
}


