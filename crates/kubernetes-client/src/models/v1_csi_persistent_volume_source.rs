/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1CsiPersistentVolumeSource : Represents storage that is managed by an external CSI volume driver (Beta feature)



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1CsiPersistentVolumeSource {
    #[serde(rename = "controllerExpandSecretRef", skip_serializing_if = "Option::is_none")]
    pub controller_expand_secret_ref: Option<crate::models::V1SecretReference>,
    #[serde(rename = "controllerPublishSecretRef", skip_serializing_if = "Option::is_none")]
    pub controller_publish_secret_ref: Option<crate::models::V1SecretReference>,
    /// Driver is the name of the driver to use for this volume. Required.
    #[serde(rename = "driver")]
    pub driver: String,
    /// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\".
    #[serde(rename = "fsType", skip_serializing_if = "Option::is_none")]
    pub fs_type: Option<String>,
    #[serde(rename = "nodePublishSecretRef", skip_serializing_if = "Option::is_none")]
    pub node_publish_secret_ref: Option<crate::models::V1SecretReference>,
    #[serde(rename = "nodeStageSecretRef", skip_serializing_if = "Option::is_none")]
    pub node_stage_secret_ref: Option<crate::models::V1SecretReference>,
    /// Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    /// Attributes of the volume to publish.
    #[serde(rename = "volumeAttributes", skip_serializing_if = "Option::is_none")]
    pub volume_attributes: Option<::std::collections::HashMap<String, String>>,
    /// VolumeHandle is the unique volume name returned by the CSI volume pluginâ€™s CreateVolume to refer to the volume on all subsequent calls. Required.
    #[serde(rename = "volumeHandle")]
    pub volume_handle: String,
}

impl V1CsiPersistentVolumeSource {
    /// Represents storage that is managed by an external CSI volume driver (Beta feature)
    pub fn new(driver: String, volume_handle: String) -> V1CsiPersistentVolumeSource {
        V1CsiPersistentVolumeSource {
            controller_expand_secret_ref: None,
            controller_publish_secret_ref: None,
            driver,
            fs_type: None,
            node_publish_secret_ref: None,
            node_stage_secret_ref: None,
            read_only: None,
            volume_attributes: None,
            volume_handle,
        }
    }
}


