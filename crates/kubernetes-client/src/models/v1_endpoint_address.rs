/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1EndpointAddress : EndpointAddress is a tuple that describes single IP address.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1EndpointAddress {
    /// The Hostname of this endpoint
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    /// The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
    #[serde(rename = "ip")]
    pub ip: String,
    /// Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
    #[serde(rename = "nodeName", skip_serializing_if = "Option::is_none")]
    pub node_name: Option<String>,
    #[serde(rename = "targetRef", skip_serializing_if = "Option::is_none")]
    pub target_ref: Option<crate::models::V1ObjectReference>,
}

impl V1EndpointAddress {
    /// EndpointAddress is a tuple that describes single IP address.
    pub fn new(ip: String) -> V1EndpointAddress {
        V1EndpointAddress {
            hostname: None,
            ip,
            node_name: None,
            target_ref: None,
        }
    }
}


