/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1beta1LeaseSpec : LeaseSpec is a specification of a Lease.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1beta1LeaseSpec {
    /// acquireTime is a time when the current lease was acquired.
    #[serde(rename = "acquireTime", skip_serializing_if = "Option::is_none")]
    pub acquire_time: Option<String>,
    /// holderIdentity contains the identity of the holder of a current lease.
    #[serde(rename = "holderIdentity", skip_serializing_if = "Option::is_none")]
    pub holder_identity: Option<String>,
    /// leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.
    #[serde(rename = "leaseDurationSeconds", skip_serializing_if = "Option::is_none")]
    pub lease_duration_seconds: Option<i32>,
    /// leaseTransitions is the number of transitions of a lease between holders.
    #[serde(rename = "leaseTransitions", skip_serializing_if = "Option::is_none")]
    pub lease_transitions: Option<i32>,
    /// renewTime is a time when the current holder of a lease has last updated the lease.
    #[serde(rename = "renewTime", skip_serializing_if = "Option::is_none")]
    pub renew_time: Option<String>,
}

impl V1beta1LeaseSpec {
    /// LeaseSpec is a specification of a Lease.
    pub fn new() -> V1beta1LeaseSpec {
        V1beta1LeaseSpec {
            acquire_time: None,
            holder_identity: None,
            lease_duration_seconds: None,
            lease_transitions: None,
            renew_time: None,
        }
    }
}


