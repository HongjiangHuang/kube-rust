/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V2beta1ObjectMetricSource : ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V2beta1ObjectMetricSource {
    /// averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
    #[serde(rename = "averageValue", skip_serializing_if = "Option::is_none")]
    pub average_value: Option<String>,
    /// metricName is the name of the metric in question.
    #[serde(rename = "metricName")]
    pub metric_name: String,
    #[serde(rename = "selector", skip_serializing_if = "Option::is_none")]
    pub selector: Option<crate::models::V1LabelSelector>,
    #[serde(rename = "target")]
    pub target: crate::models::V2beta1CrossVersionObjectReference,
    /// targetValue is the target value of the metric (as a quantity).
    #[serde(rename = "targetValue")]
    pub target_value: String,
}

impl V2beta1ObjectMetricSource {
    /// ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
    pub fn new(metric_name: String, target: crate::models::V2beta1CrossVersionObjectReference, target_value: String) -> V2beta1ObjectMetricSource {
        V2beta1ObjectMetricSource {
            average_value: None,
            metric_name,
            selector: None,
            target,
            target_value,
        }
    }
}


