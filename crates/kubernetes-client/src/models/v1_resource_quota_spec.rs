/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1ResourceQuotaSpec : ResourceQuotaSpec defines the desired hard limits to enforce for Quota.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ResourceQuotaSpec {
    /// hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
    #[serde(rename = "hard", skip_serializing_if = "Option::is_none")]
    pub hard: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "scopeSelector", skip_serializing_if = "Option::is_none")]
    pub scope_selector: Option<crate::models::V1ScopeSelector>,
    /// A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Vec<String>>,
}

impl V1ResourceQuotaSpec {
    /// ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
    pub fn new() -> V1ResourceQuotaSpec {
        V1ResourceQuotaSpec {
            hard: None,
            scope_selector: None,
            scopes: None,
        }
    }
}


