/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1alpha1StorageVersionStatus : API server instances report the versions they can decode and the version they encode objects to when persisting objects in the backend.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1StorageVersionStatus {
    /// If all API server instances agree on the same encoding storage version, then this field is set to that version. Otherwise this field is left empty. API servers should finish updating its storageVersionStatus entry before serving write operations, so that this field will be in sync with the reality.
    #[serde(rename = "commonEncodingVersion", skip_serializing_if = "Option::is_none")]
    pub common_encoding_version: Option<String>,
    /// The latest available observations of the storageVersion's state.
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<crate::models::V1alpha1StorageVersionCondition>>,
    /// The reported versions per API server instance.
    #[serde(rename = "storageVersions", skip_serializing_if = "Option::is_none")]
    pub storage_versions: Option<Vec<crate::models::V1alpha1ServerStorageVersion>>,
}

impl V1alpha1StorageVersionStatus {
    /// API server instances report the versions they can decode and the version they encode objects to when persisting objects in the backend.
    pub fn new() -> V1alpha1StorageVersionStatus {
        V1alpha1StorageVersionStatus {
            common_encoding_version: None,
            conditions: None,
            storage_versions: None,
        }
    }
}


