/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1DeploymentSpec : DeploymentSpec is the specification of the desired behavior of the Deployment.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1DeploymentSpec {
    /// Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
    #[serde(rename = "minReadySeconds", skip_serializing_if = "Option::is_none")]
    pub min_ready_seconds: Option<i32>,
    /// Indicates that the deployment is paused.
    #[serde(rename = "paused", skip_serializing_if = "Option::is_none")]
    pub paused: Option<bool>,
    /// The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
    #[serde(rename = "progressDeadlineSeconds", skip_serializing_if = "Option::is_none")]
    pub progress_deadline_seconds: Option<i32>,
    /// Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
    #[serde(rename = "replicas", skip_serializing_if = "Option::is_none")]
    pub replicas: Option<i32>,
    /// The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
    #[serde(rename = "revisionHistoryLimit", skip_serializing_if = "Option::is_none")]
    pub revision_history_limit: Option<i32>,
    #[serde(rename = "selector")]
    pub selector: crate::models::V1LabelSelector,
    #[serde(rename = "strategy", skip_serializing_if = "Option::is_none")]
    pub strategy: Option<crate::models::V1DeploymentStrategy>,
    #[serde(rename = "template")]
    pub template: crate::models::V1PodTemplateSpec,
}

impl V1DeploymentSpec {
    /// DeploymentSpec is the specification of the desired behavior of the Deployment.
    pub fn new(selector: crate::models::V1LabelSelector, template: crate::models::V1PodTemplateSpec) -> V1DeploymentSpec {
        V1DeploymentSpec {
            min_ready_seconds: None,
            paused: None,
            progress_deadline_seconds: None,
            replicas: None,
            revision_history_limit: None,
            selector,
            strategy: None,
            template,
        }
    }
}


